/* criando os gatilhos nas tabelas de hist√≥rico */

create or replace TRIGGER TG_HIST_BANNER
BEFORE UPDATE ON BANNER
FOR EACH ROW
BEGIN
    INSERT INTO HIST_BANNER (ID,NOME,FOTO,DATA_CADASTRO,DATA_EXPIRACAO,
						STATUS_DLT,ID_RESP_FK,ID_BAN_FK,DATA_HORA)
						
    SELECT  SQ_HIST_BANNER.nextval, NOME,FOTO, DATA_CADASTRO, DATA_EXPIRACAO, 
            STATUS_DLT, ID_RESP_FK, ID,
            to_char(sysdate,'dd/mm/yyyy hh24:mi:ss') AS DATA_HORA
			FROM BANNER
			WHERE ID = :OLD.ID;
END;


/* poderiamos incluir nesse gatilho a talebas telefone
	devido ao tempo, optamos por omitir esses registros*/
create or replace TRIGGER TG_HIST_FORNECEDOR
BEFORE UPDATE ON FORNECEDOR
FOR EACH ROW
BEGIN
    INSERT INTO HIST_FORNECEDOR (ID, RAZAO_SOCIAL, NOME_FANTASIA,
								CNPJ,ID_FORN_FK,STATUS_DLT,ID_END_FK,DATA_HORA)
		SELECT  SQ_HIST_FORNECEDOR.nextval, 
            RAZAO_SOCIAL,NOME_FANTASIA,
			CNPJ,ID,STATUS_DLT,ID_END_FK,
            to_char(sysdate,'dd/mm/yyyy hh24:mi:ss') AS DATA_HORA
			FROM FORNECEDOR
			WHERE ID = :OLD.ID;
END;



/*poderiamos incluir nesse gatilho as talebas telefone e conta_bancaria
	devido ao tempo, optamos por omitir esses registros */
create or replace TRIGGER TG_HIST_EMPRESA
BEFORE UPDATE ON EMPRESA
FOR EACH ROW
BEGIN
    INSERT INTO HIST_EMPRESA (ID,RAZAO_SOCIAL,CNPJ,NOME_FANTASIA,
								STATUS_DLT,ID_EMP_FK,ID_END_FK,
	DATA_HORA)
		SELECT  SQ_HIST_EMPRESA.nextval,RAZAO_SOCIAL,CNPJ,
		NOME_FANTASIA,STATUS_DLT,ID,ID_END_FK,
            to_char(sysdate,'dd/mm/yyyy hh24:mi:ss') AS DATA_HORA
			FROM EMPRESA
			WHERE ID = :OLD.ID;
END;

	
	
create or replace TRIGGER TG_HIST_BOLETO
BEFORE UPDATE ON BOLETO
FOR EACH ROW
BEGIN
    INSERT INTO HIST_BOLETO (ID,DESCRICAO, DT_VENCIMENTO, VALOR, NUMERO_DOC,
								COD_BARRA, ID_EMP_FK, ID_FORN_FK, ID_CATE_FK,
								ID_BOLE_FK, STATUS_DLT, DATA_HORA)
								
		SELECT  SQ_HIST_BOLETO.NEXTVAL,DESCRICAO,DT_VENCIMENTO,VALOR,NUMERO_DOC,
				COD_BARRA,ID_EMP_FK,ID_FORN_FK,ID_CATE_FK,ID,STATUS_DLT,
				to_char(sysdate,'dd/mm/yyyy hh24:mi:ss') AS DATA_HORA
				FROM BOLETO
				WHERE ID = :OLD.ID;
END;


create or replace TRIGGER TG_HIST_PAGAMENTO
BEFORE UPDATE ON PAGAMENTO
FOR EACH ROW
BEGIN
    INSERT INTO HIST_PAGAMENTO (ID,DT_PAGAMENTO, DT_ENTREGA, JUROS, ID_PAG_FK,
								ID_BOLE_FK, ID_STATUS_FK, ID_RESP_FK,
								STATUS_DLT, DATA_HORA)
								
		SELECT  SQ_HIST_PAGAMENTO.NEXTVAL,DT_PAGAMENTO,DT_ENTREGA,JUROS, ID, ID_BOLE_FK,
				ID_STATUS_FK,ID_RESP_FK,STATUS_DLT,
				to_char(sysdate,'dd/mm/yyyy hh24:mi:ss') AS DATA_HORA
				FROM PAGAMENTO
				WHERE ID = :OLD.ID;
END;
